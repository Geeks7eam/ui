{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport rehypePrismPlus from 'rehype-prism-plus';\nimport remarkGfm from 'remark-gfm';\nimport rehypeSlug from 'rehype-slug';\nimport { visit } from 'unist-util-visit';\nimport rehypePrettyCode from 'rehype-pretty-code';\n\n/** @type {import('rehype-pretty-code').Options} */\nconst options: import('rehype-pretty-code').Options = {\n  theme: {\n    // light: 'github-light',\n    // dark: 'github-dark-dimmed',\n    light: 'vitesse-light',\n    // dark: 'dark-plus',\n    // dark: 'one-dark-pro',\n    dark: 'one-dark-pro',\n  },\n};\n\nexport const Docs = defineDocumentType(() => ({\n  name: 'Docs',\n  filePathPattern: 'docs/**/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      required: true,\n    },\n    description: { type: 'string', required: false },\n  },\n  computedFields: {\n    slug: {\n      type: 'string',\n      resolve: (doc) => `/${doc._raw.flattenedPath}`,\n    },\n    slugAsParams: {\n      type: 'string',\n      resolve: (doc) => doc._raw.flattenedPath.split('/').slice(1).join('/'),\n    },\n    url: { type: 'string', resolve: (doc) => `/${doc._raw.flattenedPath}` },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: './content',\n  documentTypes: [Docs],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      // adding #id to headers in docs page\n      rehypeSlug,\n      () => (tree) => {\n        visit(tree, (node) => {\n          if (node?.type === 'element' && node?.tagName === 'pre') {\n            const [codeEl] = node.children;\n\n            if (codeEl.tagName !== 'code') return;\n\n            node.raw = codeEl.children?.[0].value;\n          }\n        }); //This will give us a way to keep the unmodified code content, which we can access later from the node's raw property.\n      },\n      [\n        // configuration for the rehype pretty code plugin,\n        rehypePrettyCode,\n        {\n          ...options,\n        },\n      ],\n      // using 2 themes has an implication, so forward the `raw` property to two separate pre elements, rather than just one\n      // implement another visitor function that runs after the syntax highlighting has been completed\n      () => (tree) => {\n        visit(tree, (node) => {\n          if (node?.type === 'element' && node?.tagName === 'div') {\n            if (!('data-rehype-pretty-code-fragment' in node.properties))\n              return;\n\n            // otherwise\n            for (const child of node.children) {\n              if (child.tagName === 'pre') {\n                child.properties['raw'] = node.raw;\n              }\n            }\n          }\n        });\n      }, // selecting all div elements that contains a `data-rehype-pretty-code-fragment` data attribute. Then, we iterate over the `pre` children within each `div` (one for each theme)\n      // and add the raw code content as a property to them. With this implementation, a custom MDX component for rendering `pre` elements will have `raw` as one of the available props.\n    ],\n  },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAE/C,OAAO,eAAe;AACtB,OAAO,gBAAgB;AACvB,SAAS,aAAa;AACtB,OAAO,sBAAsB;AAG7B,IAAM,UAAgD;AAAA,EACpD,OAAO;AAAA;AAAA;AAAA,IAGL,OAAO;AAAA;AAAA;AAAA,IAGP,MAAM;AAAA,EACR;AACF;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,EACjD;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,IAC9C;AAAA,IACA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,IACvE;AAAA,IACA,KAAK,EAAE,MAAM,UAAU,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa,GAAG;AAAA,EACxE;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA;AAAA,MAEb;AAAA,MACA,MAAM,CAAC,SAAS;AACd,cAAM,MAAM,CAAC,SAAS;AACpB,cAAI,MAAM,SAAS,aAAa,MAAM,YAAY,OAAO;AACvD,kBAAM,CAAC,MAAM,IAAI,KAAK;AAEtB,gBAAI,OAAO,YAAY;AAAQ;AAE/B,iBAAK,MAAM,OAAO,WAAW,CAAC,EAAE;AAAA,UAClC;AAAA,QACF,CAAC;AAAA,MACH;AAAA,MACA;AAAA;AAAA,QAEE;AAAA,QACA;AAAA,UACE,GAAG;AAAA,QACL;AAAA,MACF;AAAA;AAAA;AAAA,MAGA,MAAM,CAAC,SAAS;AACd,cAAM,MAAM,CAAC,SAAS;AACpB,cAAI,MAAM,SAAS,aAAa,MAAM,YAAY,OAAO;AACvD,gBAAI,EAAE,sCAAsC,KAAK;AAC/C;AAGF,uBAAW,SAAS,KAAK,UAAU;AACjC,kBAAI,MAAM,YAAY,OAAO;AAC3B,sBAAM,WAAW,KAAK,IAAI,KAAK;AAAA,cACjC;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA,IAEF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
